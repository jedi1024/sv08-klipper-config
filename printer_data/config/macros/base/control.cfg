[gcode_macro _IDLE_TIMEOUT]
gcode:
    {% if printer.print_stats.state == "paused" %}
        RESPOND TYPE=echo MSG="No operations in 30min!"
    {% else %}
        # Disable motors
        M84
        TURN_OFF_HEATERS
    {% endif %}

[gcode_macro _ALL_FAN_OFF]
gcode:
    M106 S0
    M107

[gcode_macro CENTER]
description: Move the toolhead to the center of objects to be printed, or center of build plate
gcode:
    {% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
    {% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
    {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
    {% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
    {% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
    {% set x_max = all_points | map(attribute=0) | max | default(center_x) %}
    {% set y_max = all_points | map(attribute=1) | max | default(center_y) %}
    {% set travel_speed = (printer.toolhead.max_velocity) * 30 | float %}

    {% set center_x = (x_min + x_max) / 2.0 | round(1) %}
    {% set center_y = (y_min + y_max) / 2.0 | round(1) %}

    SAVE_GCODE_STATE NAME=Pre_Center_State
    G90
    G0 X{center_x} Y{center_y} F{travel_speed}
    M400
    RESTORE_GCODE_STATE NAME=Pre_Center_State

[gcode_macro G29]
description: Performs Quad Gantry Leveling (if needed) and Bed Mesh Calibration
gcode:
    # Save current state
    SAVE_GCODE_STATE NAME=STATE_G29

    # Homes the printer, sets absolute positioning, and updates the Stealthburner LEDs.
    STATUS_HOMING
    # Check homing status and home if needed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                             # Full home if not already homed
    {% elif 'z' not in printer.toolhead.homed_axes %}
        G28 Z                           # Home Z if only Z is unhomed
    {% endif %}

    # Check if GANTRY_LEVELING macro exists, use it if available
    {% if printer.configfile.config['gcode_macro GANTRY_LEVELING'] is defined %}
        STATUS_LEVELING                                         # Sets SB-LEDs to leveling-mode
        M117 Gantry Leveling...                                 # Display gantry leveling status
        GANTRY_LEVELING                                         # Performs the appropriate leveling method (QGL or Z_TILT)
    {% else %}
        # Fallback to traditional method if GANTRY_LEVELING doesn't exist
        # Conditional method for Z_TILT_ADJUST and QUAD_GANTRY_LEVEL
        {% if 'z_tilt' in printer %}
            STATUS_LEVELING                                   # Sets SB-LEDs to leveling-mode
            M117 Z-tilt...                                    # Display Z-tilt adjustment
            Z_TILT_ADJUST                                     # Levels the buildplate via z_tilt_adjust
        {% elif 'quad_gantry_level' in printer %}
            STATUS_LEVELING                                   # Sets SB-LEDs to leveling-mode
            M117 QGL...                                       # Display QGL status
            QUAD_GANTRY_LEVEL                                 # Levels the gantry
        {% endif %}
    {% endif %}
    # Conditional check to ensure Z is homed after leveling procedures
    {% if 'z' not in printer.toolhead.homed_axes %}
        STATUS_HOMING                                         # Sets SB-LEDs to homing-mode
        M117 Z homing                                         # Display Z homing status
        G28 Z                                                 # Home Z if needed after leveling
    {% endif %}

    # Now perform bed mesh calibration
    STATUS_MESHING                                            # If you have this status LED option
    BED_MESH_CALIBRATE ADAPTIVE=1 Method=rapid_scan           #Uncomment for Eddy rapid bed scanning

    # Final Z home
    STATUS_HOMING
    G28 Z

    # Restore state and indicate ready
    RESTORE_GCODE_STATE NAME=STATE_G29
    STATUS_READY

[gcode_macro G34]
description: G34 - Quad Gantry Level with conditional homing. Homes if needed, performs QGL, then homes Z again.
gcode:
    # Homes the printer, sets absolute positioning, and updates the Stealthburner LEDs.
    #STATUS_HOMING
    # Check homing status and home if needed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                             # Full home if not already homed
    {% elif 'z' not in printer.toolhead.homed_axes %}
        G28 Z                           # Home Z if only Z is unhomed
    {% endif %}

    # Check if GANTRY_LEVELING macro exists, use it if available
    {% if printer.configfile.config['gcode_macro GANTRY_LEVELING'] is defined %}
        #STATUS_LEVELING                                        # Sets SB-LEDs to leveling-mode
        M117 Gantry Leveling...                                 # Display gantry leveling status
        GANTRY_LEVELING                                         # Performs the appropriate leveling method (QGL or Z_TILT)
    {% else %}
        # Fallback to traditional method if GANTRY_LEVELING doesn't exist
        # Conditional method for Z_TILT_ADJUST and QUAD_GANTRY_LEVEL
        {% if 'z_tilt' in printer %}
            #STATUS_LEVELING                                  # Sets SB-LEDs to leveling-mode
            M117 Z-tilt...                                    # Display Z-tilt adjustment
            Z_TILT_ADJUST                                     # Levels the buildplate via z_tilt_adjust
        {% elif 'quad_gantry_level' in printer %}
            #STATUS_LEVELING                                  # Sets SB-LEDs to leveling-mode
            M117 QGL...                                       # Display QGL status
            QUAD_GANTRY_LEVEL                                 # Levels the gantry
        {% endif %}
    {% endif %}
    # Conditional check to ensure Z is homed after leveling procedures
    {% if 'z' not in printer.toolhead.homed_axes %}
        #STATUS_HOMING                                        # Sets SB-LEDs to homing-mode
        M117 Z homing                                         # Display Z homing status
        G28 Z                                                 # Home Z if needed after leveling
    {% endif %}

[gcode_macro GANTRY_LEVELING]
 description: Enhanced Gantry Leveling with automatic detection of QGL or Z-Tilt
 gcode:
     SAVE_GCODE_STATE NAME=STATE_TRAM

     # Check homing status and home if needed
     {% if "xyz" not in printer.toolhead.homed_axes %}
         STATUS_HOMING
         M117 Homing all axes first
         G28                             # Full home if not already homed
     {% elif 'z' not in printer.toolhead.homed_axes %}
         STATUS_HOMING
         M117 Homing Z axis
         G28 Z                          # Home Z if only Z is unhomed
     {% endif %}

     # Check if QGL is available
     {% if 'quad_gantry_level' in printer %}
         # Only proceed with QGL if it hasn't been applied
         {% if not printer.quad_gantry_level.applied %}
             STATUS_LEVELING
             M117 Performing Quad Gantry Level

             # First pass - Coarse adjustment
             # Note: Replace 5 with preferred height (BTT Eddy=5, Mellow Fly/Cartographer=10)
             # Uncomment retry_tolerance=1 if Eddy-NG installed
             QUAD_GANTRY_LEVEL horizontal_move_z=5 retry_tolerance=1

             # Second pass - Fine adjustment
             # Eddy-NG installed? Uncomment QUAD_GANTRY_LEVEL horizontal_move_z=2
             QUAD_GANTRY_LEVEL horizontal_move_z=2

             # Home Z after leveling
             STATUS_HOMING
             M117 Re-homing Z after QGL
             G28 Z
         {% else %}
             M117 QGL already applied
         {% endif %}
     {% endif %}

     M117 Gantry Calibration Complete
     RESTORE_GCODE_STATE NAME=STATE_TRAM

     STATUS_READY

[gcode_macro UNSAFE_Z_MOVEMENT]
description: Move the toolhead in Z without homing. REQUIRES force_move CONFIG! Use positive or negative values.
gcode:
    # Default 5mm if not specified
    {% set z_movement = params.Z|default(5)|float %}

    # Extra warning for downward movement
    {% if z_movement < 0 %}
        { action_respond_info("!!! WARNING: PERFORMING UNSAFE DOWNWARD MOVEMENT !!!") }
        { action_respond_info("!!! ENSURE ADEQUATE CLEARANCE BELOW NOZZLE !!!") }
    {% endif %}

    # General warning message
    { action_respond_info("WARNING: Performing unsafe tool movement without homing!") }
    { action_respond_info("Moving Z by %smm (%s)" % (z_movement, "DOWN" if z_movement < 0 else "UP")) }

    # Save current state
    SAVE_GCODE_STATE NAME=UNSAFE_MOVE

    # Perform unsafe move - this will fail if force_move is not available

    # Absolute positioning
    G90
    # Force Z position to 0
    SET_KINEMATIC_POSITION Z=0
    # Move Z at slower 5mm/s for safety
    G0 Z{z_movement} F300

    # Restore saved state
    RESTORE_GCODE_STATE NAME=UNSAFE_MOVE