# https://github.com/ss1gohan13/A-better-print_start-macro-SV08

[gcode_macro PRINT_START]
gcode:
    START_PRINT { rawparams }

[gcode_macro START_PRINT]
gcode:
    # This part fetches data from your slicer, such as bed temp, extruder temp, chamber temp, and the size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
    {% set skew_profile = printer["gcode_macro _USER_VARIABLES"].skew_profile %}

    # Homes the printer, sets absolute positioning, and updates the Stealthburner LEDs.
    STATUS_HOMING
    # Check homing status and home if needed
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28                                                      # Full home if not already homed
    {% elif 'z' not in printer.toolhead.homed_axes %}
        G28 Z                                                    # Home Z if only Z is unhomed
    {% endif %}

    G90                                                          # Use absolute/relative coordinates
    M400                                                         # Wait for current moves to finish
    CLEAR_PAUSE                                                  # Clear any existing pause state

    # Uncomment for bed mesh (1 of 2)
    BED_MESH_CLEAR                                               # Clears old saved bed mesh (if any)

    # Checks if the bed temp is higher than 90C - if so, then trigger a heat soak.
    {% if params.BED|int > 90 %}
        M117 Bed: {target_bed}C                                  # Display bed temperature
        STATUS_HEATING                                           # Sets SB-LEDs to heating-mode
        M106 S255                                                # Turns on the PT-fan
        # Conditional check for nevermore pin
        {% if printer["output_pin nevermore"] is defined %}
            SET_PIN PIN=nevermore VALUE=1  # Turns on the Nevermore
        {% endif %}
        G1 X{x_wait} Y{y_wait} Z15 F9000                         # Go to the center of the bed
        M190 S{target_bed}                                       # Sets the target temp for the bed

        # Start chamber heating progress monitoring (modify just this section)
        M117 Monitoring chamber: {target_chamber}C               # Display chamber monitoring status
        # Conditional check for chamber thermistor
        {% if printer["temperature_sensor chamber"] is defined %}
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for the chamber to reach the desired temp
        {% else %}
            # M117 Soak: 15min (No chamber thermistor)
            # G4 P900000                                           # Wait 15 minutes for heatsoak
            _HEAT_WAIT MINUTES={15}
        {% endif %}

    # If the bed temp is not over 90c, then handle soak based on material
    {% else %}
        M117 Bed: {target_bed}C                                  # Display bed temperature
        STATUS_HEATING                                           # Sets SB-leds to heating-mode
        G1 X{x_wait} Y{y_wait} Z15 F9000                         # Go to center of the bed
        M190 S{target_bed}                                       # Sets the target temp for the bed

        # Material-based soak times with variant handling
        {% set raw_material = params.FILAMENT|default("PLA")|string|upper %}

        # Extract base material type by handling variants
        {% set material = namespace(type="") %}
        {% if "PLA" in raw_material %}
            {% set material.type = "PLA" %}
        {% elif "PETG" in raw_material %}
            {% set material.type = "PETG" %}
        {% elif "TPU" in raw_material or "TPE" in raw_material %}
            {% set material.type = "TPU" %}
        {% elif "PVA" in raw_material %}
            {% set material.type = "PVA" %}
        {% elif "HIPS" in raw_material %}
            {% set material.type = "HIPS" %}
        {% else %}
            {% set material.type = raw_material %}
        {% endif %}

        # Define soak times
        {% set soak_time = {
            "PLA": 3,    # 3 minutes - Standard PLA soak time
            "PETG": 4,   # 4 minutes - PETG needs slightly longer to stabilize
            "TPU": 3,    # 3 minutes - TPU/TPE materials
            "PVA": 3,    # 3 minutes - Support material, similar to PLA
            "HIPS": 4    # 4 minutes - When used as support/primary under 90C
        }[material.type]|default(5) %}                      # Default to 5 minutes if material not found

        # M117 Soak: {soak_time/60000|int}min ({raw_material})     # Display soak time and material
        # G4 P{soak_time}                                          # Execute soak timer
        _HEAT_WAIT MINUTES={soak_time}
    {% endif %}

    # Check if GANTRY_LEVELING macro exists, use it if available
    {% if printer.configfile.config['gcode_macro GANTRY_LEVELING'] is defined %}
        STATUS_LEVELING                                         # Sets SB-LEDs to leveling-mode
        M117 Gantry Leveling...                                 # Display gantry leveling status
        GANTRY_LEVELING                                         # Performs the appropriate leveling method (QGL or Z_TILT)
    {% else %}
        # Fallback to traditional method if GANTRY_LEVELING doesn't exist
        # Conditional method for Z_TILT_ADJUST and QUAD_GANTRY_LEVEL
        {% if 'z_tilt' in printer %}
            STATUS_LEVELING                                   # Sets SB-LEDs to leveling-mode
            M117 Z-tilt...                                    # Display Z-tilt adjustment
            Z_TILT_ADJUST                                     # Levels the buildplate via z_tilt_adjust
        {% elif 'quad_gantry_level' in printer %}
            STATUS_LEVELING                                   # Sets SB-LEDs to leveling-mode
            M117 QGL...                                       # Display QGL status
            QUAD_GANTRY_LEVEL                                 # Levels the gantry
        {% endif %}
    {% endif %}
    # Conditional check to ensure Z is homed after leveling procedures
    {% if 'z' not in printer.toolhead.homed_axes %}
        STATUS_HOMING                                         # Sets SB-LEDs to homing-mode
        M117 Z homing                                         # Display Z homing status
        G28 Z                                                 # Home Z if needed after leveling
    {% endif %}

    # Heating the nozzle to 150C. This helps with getting a correct Z-home
    STATUS_HEATING                                              # Sets SB-LEDs to heating-mode
    M117 Hotend: 150C                                           # Display hotend temperature
    M109 S150                                                   # Heats the nozzle to 150C

    M117 Cleaning the nozzle...
    STATUS_CLEANING                                             # Sets SB-LEDs to cleaning-mode
    CLEAN_NOZZLE #EXTRUDER={target_extruder}                    # Clean nozzle before printing

    M117 Nozzle cooling 150C...                                 # Display wait message
    STATUS_COOLING                                              # Sets SB-LEDs to cooling-mode
    M109 S150                                                   # Heats the nozzle to 150C

    M117 Hang tight...                                          # Display wait message
    G4 P60000                                                   # Wait 1 min to stablize and cooldown the nozzle

    STATUS_CALIBRATING_Z                                        # Sets SB-LEDs to z-calibration-mode
    M117 Tappy Tap...                                           # Display tappy tap message
    PROBE_EDDY_NG_TAP                                           # See: https://hackmd.io/yEF4CEntSHiFTj230CdD0Q

    SMART_PARK                                                  # Parks the toolhead near the beginning of the print

    {% if skew_profile is defined %}
        SKEW_PROFILE LOAD=calilantern_skew_profile
    {% endif %}

    # Uncomment for bed mesh (2 of 2)
    STATUS_MESHING                                              # Sets SB-LEDs to bed mesh-mode
    M117 Bed mesh                                               # Display bed mesh status
    BED_MESH_CALIBRATE ADAPTIVE=1 Method=rapid_scan             # Starts bed mesh  Uncomment Method=rapid_scan for eddy rapid bed meshing

    M400                                                        # Wait for current moves to finish

    SMART_PARK                                                  # KAMP smart park

    # Heats up the nozzle to target via data from the slicer
    M117 Hotend: {target_extruder}C                             # Display target hotend temperature
    STATUS_HEATING                                              # Sets SB-LEDs to heating-mode
    M107                                                        # Turns off part cooling fan
    M109 S{target_extruder}                                     # Heats the nozzle to printing temp

    # Gets ready to print by doing a purge line and updating the SB-LEDs
    M117 The purge...                                           # Display purge status
    STATUS_CLEANING                                             # Sets SB-LEDs to cleaning-mode
    LINE_PURGE                                                  # KAMP line purge

    M117 Printer goes brrr                                      # Display print starting

    STATUS_PRINTING                                             # Sets SB-LEDs to printing-mode